/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cilix.Vista;

import Controlador.ClienteBL;
import Controlador.ProductoBL;
import Controlador.TransaccionBL;
import Controlador.UsuarioBL;
import Modelo.Cliente;
import Modelo.ClienteNatural;
import Modelo.Empresa;
import Modelo.Producto;
import Modelo.Transaccion;
import Modelo.Usuario;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Map;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class FrmBuscarTransaccion extends javax.swing.JDialog {

    /**
     * Creates new form FrmBuscarTransaccion
     */
    static Usuario user;
    
    ArrayList<Producto> listaProductos;
    ArrayList<Cliente> listaClientes;
    ArrayList<Usuario> listaUsuarios;
    
    ArrayList<Producto> listaProductosActivos;
    ArrayList<Cliente> listaClientesActivos;
    ArrayList<Usuario> listaUsuariosActivos;
    
    ArrayList<Transaccion> listaTransacciones;
    
    public FrmBuscarTransaccion(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        listaProductos = new ArrayList<Producto>();
        listaClientes = new ArrayList<Cliente>();
        listaUsuarios = new ArrayList<Usuario>();
        
        listaProductosActivos = new ArrayList<Producto>();
        listaClientesActivos = new ArrayList<Cliente>();
        listaUsuariosActivos = new ArrayList<Usuario>();
        
        listaTransacciones = new ArrayList<Transaccion>();
        
        //tabla de productos
        ProductoBL logica = new ProductoBL();
        listaProductos = logica.devolverProductos();
        DefaultTableModel modeloProducto = (DefaultTableModel)tblProductos.getModel();
        modeloProducto.setRowCount(0);
        Object[] fila = new Object[5];
        for(int i=0; i<listaProductos.size();i++){
            Producto p = listaProductos.get(i);
            fila[1] = p.getId();
            fila[2] = p.getNombre();
            fila[3] = p.getCantidad();
            fila[4] = p.getPrecio();
            modeloProducto.addRow(fila);
        }
        
        //tabla de clientes/proveedores
        ClienteBL logicaCliente = new ClienteBL();
        listaClientes = logicaCliente.devolverClientes("","","","","","", "", "");
        DefaultTableModel modeloCliente = (DefaultTableModel)tblClientes.getModel();
        modeloCliente.setRowCount(0);
        Object[] filaCliente = new Object[4];
        for(int i=0; i<listaClientes.size();i++){
            Cliente c = listaClientes.get(i);
            filaCliente[1] = c.getId();
            if(c instanceof Empresa)
                filaCliente[2] = ((Empresa) c).getRazonSocial();
            else if( c instanceof ClienteNatural )
                filaCliente[2] = ((ClienteNatural) c).getNombre() + " " + ((ClienteNatural) c).getApellido();
            filaCliente[3] = c.getEmail();
            modeloCliente.addRow(filaCliente);
        }
        
        //tabla de Usuarios
        UsuarioBL logicaUsuario = new UsuarioBL();
        listaUsuarios = logicaUsuario.devolverUsuarios();
        DefaultTableModel modelo = (DefaultTableModel)tblUsuarios.getModel();
        modelo.setRowCount(0);
        Object[] filaUsuario = new Object[3];
        for(int i=0; i<listaUsuarios.size();i++){
            Usuario x = listaUsuarios.get(i);
            filaUsuario[1] = x.getId();
            filaUsuario[2] = x.getRol().getDescriptor();
            modelo.addRow(filaUsuario);
        }
        
        // Enables
        txtDniCli.setEnabled(false);
        txtNombCli.setEnabled(false);
        txtApCli.setEnabled(false);
        txtRuc.setEnabled(false);
        txtRazonSocial.setEnabled(false);
        radEsCliente.setEnabled(false);
        radEsProveedor.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblTransacciones = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        radMostrar = new javax.swing.JRadioButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        btRedProd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCodProd = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNombProd = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cboProd = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        txtIdUsr = new javax.swing.JTextField();
        btRedUsr = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cboRolUsr = new javax.swing.JComboBox<>();
        cboUsuario = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        txtNombCli = new javax.swing.JTextField();
        txtApCli = new javax.swing.JTextField();
        radEsCliente = new javax.swing.JRadioButton();
        radEsProveedor = new javax.swing.JRadioButton();
        txtDniCli = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtRuc = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtRazonSocial = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        cboClienteProveedor = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        cboCliente = new javax.swing.JComboBox<>();
        jButton12 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuFecha = new javax.swing.JMenuItem();
        jMenuCantidad = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuNProd = new javax.swing.JMenuItem();
        jMenuNUsr = new javax.swing.JMenuItem();
        jMenuNCli = new javax.swing.JMenuItem();

        tblTransacciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Cantidad", "Cliente", "Usuario", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblTransacciones);

        jButton1.setText("Cerrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jRadioButton1.setText("Solo adquisici√≥n de productos");

        jRadioButton2.setText("Solo salida de productos");

        jLabel1.setText("Mostrar:");

        radMostrar.setText("Todo");

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtrar"));

        btRedProd.setText("Reducir Lista de Productos");
        btRedProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRedProdActionPerformed(evt);
            }
        });

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Id", "Nombre", "Cantidad", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProductos);
        if (tblProductos.getColumnModel().getColumnCount() > 0) {
            tblProductos.getColumnModel().getColumn(0).setPreferredWidth(20);
            tblProductos.getColumnModel().getColumn(0).setMaxWidth(20);
        }

        jLabel2.setText("Seleccionar productos que pudieron ser usados en las transacciones a buscar:");

        jLabel3.setText("C√≥digo del Producto");

        jLabel4.setText("Nombre del Producto");

        jLabel9.setText("Campos para reducir productos mostrados en la tabla superior (Opcionales):");

        cboProd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todo", "Restricciones Activas" }));
        cboProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboProdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCodProd, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2)
                    .addComponent(jLabel9)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtNombProd, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboProd, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btRedProd, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btRedProd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNombProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(141, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Por Productos", jPanel2);

        jLabel5.setText("Seleccionar usuarios que pudieron realizar las transacciones a buscar:");

        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Id", "Rol"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsuariosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblUsuarios);
        if (tblUsuarios.getColumnModel().getColumnCount() > 0) {
            tblUsuarios.getColumnModel().getColumn(0).setPreferredWidth(20);
            tblUsuarios.getColumnModel().getColumn(0).setMaxWidth(20);
        }

        jLabel8.setText("ID del Usuario:");

        btRedUsr.setText("Reducir Lista de Usuarios");
        btRedUsr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRedUsrActionPerformed(evt);
            }
        });

        jLabel10.setText("Campos para reducir Usuarios mostrados en la tabla superior (Opcionales):");

        jLabel12.setText("Rol:");

        cboUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todo", "Restricciones Activas" }));
        cboUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btRedUsr, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(jLabel8)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel12)
                            .addGap(90, 90, 90)
                            .addComponent(cboRolUsr, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(109, 109, 109)
                            .addComponent(txtIdUsr, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(cboUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btRedUsr)
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(txtIdUsr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cboRolUsr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(136, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Por Usuario", jPanel3);

        jLabel6.setText("Seleccionar cliente/proveedor que podr√≠a estar asociado a las transacciones a buscar:");

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Id", "Identificador", "Correo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClientesMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblClientes);
        if (tblClientes.getColumnModel().getColumnCount() > 0) {
            tblClientes.getColumnModel().getColumn(0).setPreferredWidth(20);
            tblClientes.getColumnModel().getColumn(0).setMaxWidth(20);
        }

        jLabel13.setText("Campos para reducir Usuarios mostrados en la tabla superior (Opcionales):");

        jLabel15.setText("Nombre:");

        jLabel16.setText("Apellido:");

        jLabel17.setText("DNI:");

        jButton4.setText("Reducir Lista de Clientes");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        radEsCliente.setText("Cliente");

        radEsProveedor.setText("Proveedor");

        jLabel18.setText("RUC:");

        jLabel19.setText("Raz√≥n Social:");

        jLabel20.setText("Cliente/Proveedor:");

        cboClienteProveedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Cliente Natural", "Empresa" }));
        cboClienteProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboClienteProveedorActionPerformed(evt);
            }
        });

        jLabel14.setText("Tipo:");

        cboCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todo", "Restricciones Activas" }));
        cboCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel15)
                                .addComponent(jLabel16)
                                .addComponent(jLabel14))
                            .addGap(81, 81, 81)
                            .addComponent(cboClienteProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtNombCli, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtApCli, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(radEsCliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(radEsProveedor)
                                .addGap(198, 198, 198))
                            .addComponent(txtRazonSocial, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                            .addComponent(txtRuc, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDniCli, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(cboClienteProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtDniCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtNombCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtApCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(15, 15, 15)
                        .addComponent(jLabel19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(txtRuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(txtRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radEsCliente)
                    .addComponent(radEsProveedor)
                    .addComponent(jLabel20))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Por Cliente/Proveedor", jPanel1);

        jButton12.setText("Nueva B√∫squeda");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jMenu1.setText("Ordenar por...");

        jMenuFecha.setText("Fecha de realizaci√≥n");
        jMenuFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFechaActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuFecha);

        jMenuCantidad.setText("Cantidad");
        jMenuCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCantidadActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuCantidad);

        jMenu2.setText("Alfab√©ticamente...");

        jMenuNProd.setText("Nombre del Producto");
        jMenuNProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuNProdActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuNProd);

        jMenuNUsr.setText("Nombre de Usuario");
        jMenuNUsr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuNUsrActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuNUsr);

        jMenuNCli.setText("Nombre del Cliente");
        jMenuNCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuNCliActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuNCli);

        jMenu1.add(jMenu2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(radMostrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRadioButton2)
                        .addGap(30, 30, 30)
                        .addComponent(jRadioButton1)
                        .addGap(85, 85, 85)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addGap(203, 203, 203)
                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(radMostrar)
                            .addComponent(jButton1)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton12)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        TransaccionBL logica = new TransaccionBL();

        listaTransacciones = logica.devolverTransacciones(listaClientesActivos, listaProductosActivos, listaUsuariosActivos);
        DefaultTableModel modelo = (DefaultTableModel)tblTransacciones.getModel();
        modelo.setRowCount(0);
        Object[] fila = new Object[5];
        for(int i=0; i<listaTransacciones.size();i++){
            Transaccion t = listaTransacciones.get(i);
            fila[0] = t.getProducto().getNombre();
            
            fila[1] = t.getTipoTransaccion().getSigno()+Integer.toString(t.getCantidad());
            
            String cliente;
            if(t.getClienteNatural()!=null)
                cliente = t.getClienteNatural().getNombre() + " " + t.getClienteNatural().getApellido();
            else
                cliente = t.getEmpresa().getRazonSocial();
            fila[2] = cliente;
            
            fila[3] = t.getUsuario().getId();
            
            SimpleDateFormat dFormat = new SimpleDateFormat("yyyy-MM-dd");
            String date = dFormat.format(t.getFecha());
            fila[4] = date;
            
            modelo.addRow(fila);
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void tblProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductosMouseClicked
        // TODO add your handling code here:
        int idx = tblProductos.getSelectedRow();
        Producto p = listaProductos.get(idx);
        if((Boolean)tblProductos.getModel().getValueAt(idx, 0)
                && !listaProductosActivos.contains(p)){
            listaProductosActivos.add(p);
        }
        else{
            if((String)cboProd.getSelectedItem()=="Todo")
                listaProductosActivos.remove(p);
            else
                listaProductosActivos.remove(listaProductosActivos.get(idx));
        }
        
        
    }//GEN-LAST:event_tblProductosMouseClicked

    private void cboProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboProdActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modeloProducto = (DefaultTableModel)tblProductos.getModel();
        modeloProducto.setRowCount(0);
        if((String)cboProd.getSelectedItem()=="Todo"){
            Object[] fila = new Object[5];
            for(int i=0; i<listaProductos.size();i++){
                Producto p = listaProductos.get(i);
                if(listaProductosActivos.contains(p))
                    fila[0]=true;
                else
                    fila[0]=false;
                fila[1] = p.getId();
                fila[2] = p.getNombre();
                fila[3] = p.getCantidad();
                fila[4] = p.getPrecio();
                modeloProducto.addRow(fila);
            }
        }
        else{
            Object[] fila = new Object[5];
            for(int i=0; i<listaProductosActivos.size();i++){
                Producto p = listaProductosActivos.get(i);
                fila[0] = true;
                fila[1] = p.getId();
                fila[2] = p.getNombre();
                fila[3] = p.getCantidad();
                fila[4] = p.getPrecio();
                modeloProducto.addRow(fila);
            }
        }
    }//GEN-LAST:event_cboProdActionPerformed

    private void cboUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboUsuarioActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modeloProducto = (DefaultTableModel)tblUsuarios.getModel();
        modeloProducto.setRowCount(0);
        if((String)cboUsuario.getSelectedItem()=="Todo"){
            Object[] filaUsuario = new Object[3];
            for(int i=0; i<listaUsuarios.size();i++){
                Usuario x = listaUsuarios.get(i);
                if(listaUsuariosActivos.contains(x))
                    filaUsuario[0]=true;
                else
                    filaUsuario[0]=false;
                filaUsuario[1] = x.getId();
                filaUsuario[2] = x.getRol().getDescriptor();
                modeloProducto.addRow(filaUsuario);
            }
        }
        else{
            Object[] filaUsuario = new Object[3];
            for(int i=0; i<listaUsuariosActivos.size();i++){
                Usuario x = listaUsuariosActivos.get(i);
                filaUsuario[0]=true;
                filaUsuario[1] = x.getId();
                filaUsuario[2] = x.getRol().getDescriptor();
                modeloProducto.addRow(filaUsuario);
            }
        }
    }//GEN-LAST:event_cboUsuarioActionPerformed

    private void tblUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsuariosMouseClicked
        // TODO add your handling code here:
        int idx = tblUsuarios.getSelectedRow();
        Usuario u = listaUsuarios.get(idx);
        if((Boolean)tblUsuarios.getModel().getValueAt(idx, 0) 
                && !listaUsuariosActivos.contains(u)){
            listaUsuariosActivos.add(u);
        }
        else{
            if((String)cboUsuario.getSelectedItem()=="Todo")
                listaUsuariosActivos.remove(u);
            else
                listaUsuariosActivos.remove(listaUsuariosActivos.get(idx));
        }
    }//GEN-LAST:event_tblUsuariosMouseClicked

    private void tblClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClientesMouseClicked
        // TODO add your handling code here:
        int idx = tblClientes.getSelectedRow();
        Cliente c = listaClientes.get(idx);
        if((Boolean)tblClientes.getModel().getValueAt(idx, 0)
                && !listaClientesActivos.contains(c)){
            listaClientesActivos.add(c);
        }
        else{
            if((String)cboCliente.getSelectedItem()=="Todo")
                listaClientesActivos.remove(c);
            else
                listaClientesActivos.remove(listaClientesActivos.get(idx));
        }
    }//GEN-LAST:event_tblClientesMouseClicked

    private void cboClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboClienteActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modeloCliente = (DefaultTableModel)tblClientes.getModel();
        modeloCliente.setRowCount(0);
        if((String)cboCliente.getSelectedItem()=="Todo"){
            Object[] filaCliente = new Object[4];
            for(int i=0; i<listaClientes.size();i++){
                Cliente c = listaClientes.get(i);
                if(listaClientesActivos.contains(c))
                    filaCliente[0]=true;
                else
                    filaCliente[0]=false;
                filaCliente[1] = c.getId();
                if(c instanceof Empresa)
                    filaCliente[2] = ((Empresa) c).getRazonSocial();
                else if( c instanceof ClienteNatural )
                    filaCliente[2] = ((ClienteNatural) c).getNombre() + " " + ((ClienteNatural) c).getApellido();
                filaCliente[3] = c.getEmail();
                modeloCliente.addRow(filaCliente);
            }
        }
        else{
            Object[] filaCliente = new Object[4];
            for(int i=0; i<listaClientesActivos.size();i++){
                Cliente c = listaClientesActivos.get(i);
                filaCliente[0]=true;
                filaCliente[1] = c.getId();
                if(c instanceof Empresa)
                    filaCliente[2] = ((Empresa) c).getRazonSocial();
                else if( c instanceof ClienteNatural )
                    filaCliente[2] = ((ClienteNatural) c).getNombre() + " " + ((ClienteNatural) c).getApellido();
                filaCliente[3] = c.getEmail();
                modeloCliente.addRow(filaCliente);
            }
        }
    }//GEN-LAST:event_cboClienteActionPerformed

    private void btRedProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRedProdActionPerformed
        // TODO add your handling code here:
        actualizarTablaProductos();
    }//GEN-LAST:event_btRedProdActionPerformed

    private void cboClienteProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboClienteProveedorActionPerformed
        // TODO add your handling code here:
        
        int idx = cboClienteProveedor.getSelectedIndex();
        if(idx == 0){
            txtDniCli.setEnabled(false);
            txtNombCli.setEnabled(false);
            txtApCli.setEnabled(false);
            txtRuc.setEnabled(false);
            txtRazonSocial.setEnabled(false);
            radEsCliente.setEnabled(false);
            radEsProveedor.setEnabled(false);
        }else if(idx == 1){
            txtDniCli.setEnabled(true);
            txtNombCli.setEnabled(true);
            txtApCli.setEnabled(true);
            txtRuc.setEnabled(false);
            txtRazonSocial.setEnabled(false);
            radEsCliente.setEnabled(false);
            radEsProveedor.setEnabled(false);
        }else if(idx == 2){
            txtDniCli.setEnabled(false);
            txtNombCli.setEnabled(false);
            txtApCli.setEnabled(false);
            txtRuc.setEnabled(true);
            txtRazonSocial.setEnabled(true);
            radEsCliente.setEnabled(true);
            radEsProveedor.setEnabled(true);
        }
        
    }//GEN-LAST:event_cboClienteProveedorActionPerformed

    private void jMenuCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCantidadActionPerformed
        // TODO add your handling code here:
        listaTransacciones.sort(Comparator.comparingInt(Transaccion::getCantidad));
        actualizarTablaTransacciones();
    }//GEN-LAST:event_jMenuCantidadActionPerformed

    private void jMenuNUsrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuNUsrActionPerformed
        // TODO add your handling code here:
        listaTransacciones.sort((o1, o2) -> o1.getUsuario().getId().compareTo(o2.getUsuario().getId()));
        actualizarTablaTransacciones();
    }//GEN-LAST:event_jMenuNUsrActionPerformed

    private void jMenuNCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuNCliActionPerformed
        // TODO add your handling code here:
        listaTransacciones.sort((o1, o2) -> o1.getClienteNatural().getNombre().compareTo(o2.getClienteNatural().getNombre()));
        actualizarTablaTransacciones();
    }//GEN-LAST:event_jMenuNCliActionPerformed

    private void jMenuNProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuNProdActionPerformed
        // TODO add your handling code here:
        listaTransacciones.sort((o1, o2) -> o1.getProducto().getNombre().compareTo(o2.getProducto().getNombre()));
        actualizarTablaTransacciones();
    }//GEN-LAST:event_jMenuNProdActionPerformed

    private void jMenuFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFechaActionPerformed
        // TODO add your handling code here:
        listaTransacciones.sort((o1, o2) -> o1.getFecha().compareTo(o2.getFecha()));
    }//GEN-LAST:event_jMenuFechaActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        actualizarTablaClientes();
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btRedUsrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRedUsrActionPerformed
        // TODO add your handling code here:
        actualizarTablaUsuarios();
    }//GEN-LAST:event_btRedUsrActionPerformed
    
    void actualizarTablaUsuarios(){
        UsuarioBL logNegUsuario = new UsuarioBL();
        listaUsuarios = logNegUsuario.devolverUsuarios(txtIdUsr.getText(), cboRolUsr.getSelectedItem().toString());
        
        if(listaUsuarios == null) return;
        DefaultTableModel modeloUsuario = (DefaultTableModel)tblUsuarios.getModel();
        modeloUsuario.setRowCount(0);
        Object[] fila = new Object[3];
        for(int i=0; i<listaUsuarios.size();i++){
            Usuario u = listaUsuarios.get(i);
            if(listaUsuariosActivos.contains(u))
                fila[0]=true;
            else
                fila[0]=false;
            fila[1] = u.getId();
            fila[2] = u.getRol().getDescriptor();
            modeloUsuario.addRow(fila);
        }
    }
    void actualizarTablaProductos(){
        ProductoBL logNegProducto = new ProductoBL();
        listaProductos = logNegProducto.devolverProductos(txtCodProd.getText(), txtNombProd.getText());
        if(listaProductos == null) return;
        DefaultTableModel modeloProducto = (DefaultTableModel)tblProductos.getModel();
        modeloProducto.setRowCount(0);
        Object[] fila = new Object[5];
        for(int i=0; i<listaProductos.size();i++){
            Producto p = listaProductos.get(i);
            if(listaProductosActivos.contains(p))
                fila[0]=true;
            else
                fila[0]=false;
            fila[1] = p.getId();
            fila[2] = p.getNombre();
            fila[3] = p.getCantidad();
            fila[4] = p.getPrecio();
            modeloProducto.addRow(fila);
        }
    }
    
    void actualizarTablaClientes(){
        ClienteBL logica = new ClienteBL();
        ArrayList<Cliente> lista;
        String tipo;
        if(cboClienteProveedor.getSelectedIndex() == 0) tipo = "";
        else if(cboClienteProveedor.getSelectedIndex() == 1) tipo = "Cliente Natural";
        else tipo = "Empresa";
        String dni = txtDniCli.getText();
        String nombre = txtNombCli.getText();
        String apellido = txtApCli.getText();
        String ruc = txtRuc.getText();
        String razonSocial = txtRazonSocial.getText();
        String tipoEmpresa = "";
        boolean uno = radEsCliente.isSelected(), dos = radEsProveedor.isSelected();
        if(uno && dos) tipoEmpresa = "";
        else if(uno) tipoEmpresa = "Cliente";
        else if(dos) tipoEmpresa = "Proveedor";
        lista = logica.devolverClientes(tipo,dni,nombre,apellido,ruc,razonSocial,tipoEmpresa);
        DefaultTableModel modelo = (DefaultTableModel)tblClientes.getModel();
        modelo.setRowCount(0);
        Object[] fila = new Object[4];
        for(int i=0; i<lista.size();i++){
            Cliente c = lista.get(i);
            if(listaClientesActivos.contains(c))
                fila[0]=true;
            else
                fila[0]=false;
            fila[1] = c.getId();
            if(c instanceof Empresa)
                fila[2] = ((Empresa) c).getRazonSocial();
            else if( c instanceof ClienteNatural )
                fila[2] = ((ClienteNatural) c).getNombre() + " " + ((ClienteNatural) c).getApellido();
            fila[3] = c.getEmail();
            modelo.addRow(fila);
        }
    }
    
    
    
    void actualizarTablaTransacciones(){
        DefaultTableModel modelo = (DefaultTableModel)tblTransacciones.getModel();
        modelo.setRowCount(0);
        Object[] fila = new Object[5];
        for(int i=0; i<listaTransacciones.size();i++){
            Transaccion t = listaTransacciones.get(i);
            fila[0] = t.getProducto().getNombre();
            
            fila[1] = t.getTipoTransaccion().getSigno()+Integer.toString(t.getCantidad());
            
            String cliente;
            if(t.getClienteNatural()!=null)
                cliente = t.getClienteNatural().getNombre() + " " + t.getClienteNatural().getApellido();
            else
                cliente = t.getEmpresa().getRazonSocial();
            fila[2] = cliente;
            
            fila[3] = t.getUsuario().getId();
            
            SimpleDateFormat dFormat = new SimpleDateFormat("yyyy-MM-dd");
            String date = dFormat.format(t.getFecha());
            fila[4] = date;
            
            modelo.addRow(fila);
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmBuscarTransaccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmBuscarTransaccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmBuscarTransaccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmBuscarTransaccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmBuscarTransaccion dialog = new FrmBuscarTransaccion(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btRedProd;
    private javax.swing.JButton btRedUsr;
    private javax.swing.JComboBox<String> cboCliente;
    private javax.swing.JComboBox<String> cboClienteProveedor;
    private javax.swing.JComboBox<String> cboProd;
    private javax.swing.JComboBox<String> cboRolUsr;
    private javax.swing.JComboBox<String> cboUsuario;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuCantidad;
    private javax.swing.JMenuItem jMenuFecha;
    private javax.swing.JMenuItem jMenuNCli;
    private javax.swing.JMenuItem jMenuNProd;
    private javax.swing.JMenuItem jMenuNUsr;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton radEsCliente;
    private javax.swing.JRadioButton radEsProveedor;
    private javax.swing.JRadioButton radMostrar;
    private javax.swing.JTable tblClientes;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTable tblTransacciones;
    private javax.swing.JTable tblUsuarios;
    private javax.swing.JTextField txtApCli;
    private javax.swing.JTextField txtCodProd;
    private javax.swing.JTextField txtDniCli;
    private javax.swing.JTextField txtIdUsr;
    private javax.swing.JTextField txtNombCli;
    private javax.swing.JTextField txtNombProd;
    private javax.swing.JTextField txtRazonSocial;
    private javax.swing.JTextField txtRuc;
    // End of variables declaration//GEN-END:variables
}
